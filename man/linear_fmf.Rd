% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linear_fmf.R
\name{linear_fmf}
\alias{linear_fmf}
\title{Normalize Raster Values Using Linear Fuzzy Membership Function}
\usage{
linear_fmf(raster, a, b)
}
\arguments{
\item{raster}{Raster* object representing the raster to be transformed.}

\item{a}{Numeric, the slope of the linear function.}

\item{b}{Numeric, the y-intercept of the linear function.}
}
\value{
Raster* object with transformed values.
}
\description{
This function modifies raster values using a linear fuzzy membership function, scaling the output so that values potentially range between 0 and 1, depending on the parameters. This simple linear transformation is defined by the equation \code{ax + b}.
}
\details{
The linear fuzzy membership function uses the formula:
\deqn{f(x) = a \cdot x + b}
where \code{x} is the raster value, \code{a} is the slope, and \code{b} is the y-intercept.
}
\examples{
\donttest{
library(raster)
# Create a raster with random values between 0 and 5
raster_obj <- raster(ncols = 30, nrows = 15)
values(raster_obj) <- runif(ncell(raster_obj), min = 0, max = 5)
# Apply the linear fuzzy membership function
transformed_raster <- linear_fmf(raster_obj, a = 0.2, b = 0)
# Visualize the transformed raster
plot(transformed_raster)
}
}
